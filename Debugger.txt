如何新增功能：
	新增一个功能，最关键的步骤是需求的确认。
		1.需求明确了，避免不必要的返工修改等。
		2.有个大概的思路，避免实现不了或改动过大等一系列问题，好及时与现场沟通取折中方案，或换个实现方式等。
			要改到那些功能
			这些功能大概要如何实现
				这些功能具体如何实现，要那些数据，这些数据具体来源
			教训案例：
				需求是明确了（同号），但是在实现过程中，碰到一个问题（重新编号，旧数据不好处理）因耗费时间多，改动大，可能出现未知bug然后就取消了改功能，但都快开发完了。
				没有需求文档，只提供了几张图，然后电话沟通了下，最后发现理解是错的，然后代码返工重写。
		3.有一个明确的思路，能实现有目的有思路的快乐编程。
		
		...
		实现思路的构思：
			方式1：
				列出大概要实现那些功能
					这些功能要那些接口。
			方式2：
				首先要对主要功能一定要理解，便于整体代码架构（业务流程）的搭建。
				细节和些额外小功能可以后续再说。
如何修复问题：
	修复一个问题，最关键的步骤是bug位置的定位。
	如果能一下定位到出现bug的位置最好，通常用切块法一步步切分问题所在部分，最后定位到问题的位置：
		参考思路：
			1.前端（客户端），还是后端 
			如：
				1.看浏览器控制台是否报错
				2.看network获取的数据
			2.应用程序对数据的处理出现问题，还是应用程序拿到的数据有问题。
			如：从数据库获取的数据，从前端获取的数据有问题等。
			3.找到大概位置后，从具体代码出发，来最终确认bug，和修正问题。
		注：
			静下心来定位问题，那么问题就解决了80%。
		附：
			提高bug定位的效率：
				1. 最好能先复现操作环境.
					如：浏览器版本，操作系统，数据库系统等
				2. 提供操作步骤复现问题。或直接让其重现异常
			怀疑一切，没有任何东西是一定可靠的：
				配置问题
					1.应用就有功能，但配置不对
				代码问题
					代码有漏洞，有bug
				环境问题
					数据库问题，操作系统问题
				